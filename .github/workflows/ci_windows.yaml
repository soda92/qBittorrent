name: CI - Windows
on: [pull_request, push]

jobs:
  ci:
    name: Build
    runs-on: windows-latest

    strategy:
      fail-fast: false
      matrix:
        libt_version: ["2.0.4", "1.2.14"]
        qbt_gui: ["GUI=ON", "GUI=OFF"]
        qt_version: ["5", "6"]
        exclude:
          - libt_version: "1.2.14"
            qt_version: "6"

    env:
      libtorrent_path: "${{ github.workspace }}/libtorrent"
    defaults:
      run:
        shell: msys2 {0}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Install dependencies
      uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW64
        update: true
        install: >-
          git
          mingw-w64-x86_64-qt${{ matrix.qt_version }}-static
          mingw-w64-x86_64-cmake
          mingw-w64-x86_64-ninja
          mingw-w64-x86_64-gcc
          mingw-w64-x86_64-openssl
          mingw-w64-x86_64-zlib
          mingw-w64-x86_64-boost

    - name: Install libtorrent
      run: |
        git clone --branch v${{ matrix.libt_version }} --depth 1 https://github.com/arvidn/libtorrent.git
        cd libtorrent
        git submodule update --init --recursive
        cmake \
          -B build \
          -G "Ninja" \
          -DCMAKE_BUILD_TYPE=RelWithDebInfo \
          -DCMAKE_INSTALL_PREFIX="${{ env.libtorrent_path }}" \
          -DBUILD_SHARED_LIBS=OFF \
          -Ddeprecated-functions=OFF \
          -Dstatic_runtime=ON
        cmake --build build
        cmake --install build

    - name: Build qBittorrent
      run: |
        cmake \
          -B build \
          -G "Ninja" \
          -DCMAKE_BUILD_TYPE=RelWithDebInfo \
          -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \
          -DQT${{ matrix.qt_version }}=ON \
          -D${{ matrix.qbt_gui }} \
          -DLibtorrentRasterbar_DIR="${{ env.libtorrent_path }}/lib/cmake/LibtorrentRasterbar" \
          -DVERBOSE_CONFIGURE=ON \
          --graphviz=build/target_graph.dot
        cmake --build build

    - name: Upload build artifacts
      uses: actions/upload-artifact@v2
      with:
        name: qBittorrent-CI_Windows-x64_${{ matrix.qbt_gui }}_libtorrent-${{ matrix.libt_version }}_Qt-${{ matrix.qt_version }}
        path: |
          build/compile_commands.json
          build/install_manifest.txt
          build/target_graph.dot
          build/qbittorrent.exe
          build/qbittorrent-nox.exe
          libtorrent/cmake-build-dir/compile_commands.json
          libtorrent/cmake-build-dir/target_graph.dot
